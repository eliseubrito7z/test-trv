"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findOppositeRelation = exports.relationsByModel = void 0;
const client_1 = require("@prisma/client");
if (!client_1.Prisma.dmmf) {
    throw new Error("Prisma DMMF not found, please generate Prisma client using `npx prisma generate`");
}
exports.relationsByModel = {};
client_1.Prisma.dmmf.datamodel.models.forEach((model) => {
    exports.relationsByModel[model.name] = model.fields.filter((field) => field.kind === "object" && field.relationName);
});
function findOppositeRelation(relation) {
    const parentRelations = exports.relationsByModel[relation.type] || [];
    const oppositeRelation = parentRelations.find((parentRelation) => parentRelation !== relation &&
        parentRelation.relationName === relation.relationName);
    if (!oppositeRelation) {
        throw new Error(`Unable to find opposite relation to ${relation.name}`);
    }
    return oppositeRelation;
}
exports.findOppositeRelation = findOppositeRelation;
